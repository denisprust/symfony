(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vehicles"],{

/***/ "./assets/js/vehicles/vehicles.js":
/*!****************************************!*\
  !*** ./assets/js/vehicles/vehicles.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! core-js/modules/es.array.find */ "./node_modules/core-js/modules/es.array.find.js");

__webpack_require__(/*! core-js/modules/es.object.to-string */ "./node_modules/core-js/modules/es.object.to-string.js");

__webpack_require__(/*! core-js/modules/es.promise */ "./node_modules/core-js/modules/es.promise.js");

__webpack_require__(/*! core-js/modules/es.promise.finally */ "./node_modules/core-js/modules/es.promise.finally.js");

var $ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");

var Swal = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");

Vehicles = {
  init: function init() {},
  deleteVehicle: function deleteVehicle(elem) {
    Swal.fire({
      title: 'Atenção!',
      text: 'Tem certeza de que deseja excluir este veículo?',
      type: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      cancelButtonText: 'Cancelar',
      confirmButtonText: 'Sim'
    }).then(function (result) {
      if (result.value) {
        var params = {
          vehicle_id: $(elem).data('id')
        };
        $.ajax({
          url: '/vehicle/delete',
          method: 'delete',
          data: params,
          beforeSend: function beforeSend() {
            Swal.fire({
              title: 'Excluíndo veículo...'
            });
            Swal.showLoading();
          },
          success: function success(response) {
            if (response.success) {
              Swal.fire('', response.message, 'success')["finally"](function () {
                Swal.fire({
                  title: 'Carregando veículos...'
                });
                Swal.showLoading();
                window.location.reload();
              });
            } else {
              Swal.fire('Oops!', response.message, 'error');
            }
          },
          error: function error(response) {
            Swal.fire('Oops!', 'Ocorreu um erro ao excluir o carro', 'error');
          }
        });
      }
    });
  },
  openModalVehicle: function openModalVehicle() {
    $.ajax({
      url: '/vehicle/modal',
      method: 'post',
      beforeSend: function beforeSend() {
        $('div#modal-vehicle-content').html('');
        Swal.fire({
          title: 'Carregando Veículo...'
        });
        Swal.showLoading();
      },
      success: function success(response) {
        $('div#modal-vehicle-content').html(response);
        var modal = $('#modal-vehicle');
        Vehicles.initMasks();
        modal.modal('show');
        Swal.close();
      },
      error: function error(response) {
        Swal.fire('Oops!', 'Ocorreu um erro ao salvar o veículo', 'error');
      }
    });
  },
  clearInputsModal: function clearInputsModal(modal) {
    modal.find('input,select').val('');
    var inputs = modal.find('input[required], select[required]');
    $(inputs).css('border', '1px solid #ced4da');
  },
  saveVehicle: function saveVehicle(elem) {
    var modal = $(elem).closest('#modal-vehicle');
    var inputs = modal.find('input[required], select[required]');
    var count = 0;
    inputs.each(function (index, elem) {
      if (!$(elem).val()) {
        $(elem).css('border', '1px solid red');
        if (count === 0) $(elem).focus();
        ++count;
      } else {
        $(elem).css('border', '1px solid #ced4da');
      }
    });

    if (count > 0) {
      Swal.fire('Oops!', 'Por favor, informe todos os campos obrigatórios.', 'error');
      return;
    }

    var params = $('form#form-vehicle').serialize();
    $.ajax({
      url: '/vehicle/post',
      method: 'post',
      data: params,
      beforeSend: function beforeSend() {
        Swal.fire({
          title: 'Salvando veículo...'
        });
        Swal.showLoading();
      },
      success: function success(response) {
        if (response.success) {
          Swal.fire('', response.message, 'success')["finally"](function () {
            Swal.fire({
              title: 'Carregando veículos...'
            });
            Swal.showLoading();
            window.location.reload();
          });
        } else {
          Swal.fire('Oops!', response.message, 'error');
        }
      },
      error: function error(response) {
        Swal.fire('Oops!', 'Ocorreu um erro ao salvar o veículo', 'error');
      }
    });
  },
  editVehicle: function editVehicle(elem) {
    var params = {
      vehicle_id: $(elem).data('id')
    };
    $.ajax({
      url: '/vehicles/teste',
      method: 'post',
      data: params,
      beforeSend: function beforeSend() {
        $('div#modal-vehicle-content').html('');
        Swal.fire({
          title: 'Carregando veículo...'
        });
        Swal.showLoading();
      },
      success: function success(response) {
        $('div#modal-vehicle-content').html(response);
        $('#modal-vehicle').modal('show');
        Swal.close();
        Vehicles.initMasks();
      }
    });
  },
  initMasks: function initMasks() {
    $('.money').mask('000.000.000.000.000,00', {
      reverse: true
    });
    $('[name=year],[name=model_year]').mask('0000');
  }
};

/***/ })

},[["./assets/js/vehicles/vehicles.js","runtime","vendors~app~home~mask~vehicles","vendors~app~home~vehicles","vendors~vehicles"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,